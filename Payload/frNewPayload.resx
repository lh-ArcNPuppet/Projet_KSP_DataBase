<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctBox_PictureType.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>