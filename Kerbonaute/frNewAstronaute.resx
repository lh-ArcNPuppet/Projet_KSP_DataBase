<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctBox_PictureType.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>