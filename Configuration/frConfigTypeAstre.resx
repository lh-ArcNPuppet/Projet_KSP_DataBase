<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctBox_PictureType.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>